abstract root command {
    class optional sym target;
    class_many optional sym components;
    class optional sym tool;
    class optional sym location;

    class optional sym invocation;
}

/* Info commands. */
command stats {
}

command attack {
    target corporeal;
    tool weapon;
}

command inspect {
}

command move {
}

command consume {
    target consumable;
}

command get {
    target item;
}

/* stash/put/place */
/* command stash {} */

/* drop/ditch */
command drop {
    target item;
}

command hide {
}

command unhide {
}

command help {
}

abstract command construct {
    invocation construct;
}

construct cook {
}

construct forge {
    location anvil;
    tool hammer;
}

construct craft {}

construct make_bow {}

construct fletch {}

post_process {
    self.find_subtypes(:command, {}, true).each do |command|
        Log.debug("Propagating tool information for #{command}")
        propagate_recursive(info_for(command, :tool)) do |subtype|
            Log.debug("#{subtype} is a required tool for #{command}")
            name = :used_for
            modify_info(subtype, name, []) << command
        end

        Log.debug("Propagating target information for #{command}")
        propagate_recursive(info_for(command, :target)) do |subtype|
            Log.debug("#{subtype} is a target of #{command}")
            name = :target_of
            modify_info(subtype, name, []) << command
        end

        Log.debug("Propagating location information for #{command}")
        propagate_recursive(info_for(command, :location)) do |subtype|
            Log.debug("#{subtype} is the location at which #{command} happens")
            name = :location_of
            modify_info(subtype, name, []) << command
        end
    end
}
