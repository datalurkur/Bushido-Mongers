abstract command {
    class optional sym target;
    class_many optional sym components;
    class optional sym tool;
    class optional sym location;

    class optional sym invocation;
    class optional sym skill;
}

/* Info commands. */
command stats {}
command help {}

/* World-interaction commands. */

command inspect {
    location composition;
}

command move {}

command attack {
    target object;
    location body_part;
    tool object; /* weapon-specific lookups happen if no tool is specified */
}

command consume {
    target consumable;
}

command get {
    target object;
}
command stash {
    target object;
}
command drop {
    target object;
}

command equip {
    target object;
}
command unequip {
    target object;
}

command hide {}
command unhide {}

command open {
    target composition;
}
command close {
    target composition;
}

/* PC-NPC Interactions. */

command say {}
command whisper {}

/* Item construction. */

abstract command construct {
    invocation construct;
}

construct cook {}

construct forge {
    location anvil;
    tool hammer;

    skill smithing;
}

construct craft {
    skill crafting;
}

construct make_bow {
    skill bowmaking;
}

construct fletch {
    skill fletching;
}

post_process {
    self.find_subtypes(:command, {}, true).each do |command|
        Log.debug("Propagating tool information for #{command}", 6)
        propagate_recursive(info_for(command, :tool)) do |subtype|
            Log.debug("#{subtype} is a required tool for #{command}", 6)
            name = :used_for
            modify_info(subtype, name, []) << command
        end

        Log.debug("Propagating target information for #{command}", 6)
        propagate_recursive(info_for(command, :target)) do |subtype|
            Log.debug("#{subtype} is a target of #{command}", 6)
            name = :target_of
            modify_info(subtype, name, []) << command
        end

        Log.debug("Propagating location information for #{command}", 6)
        propagate_recursive(info_for(command, :location)) do |subtype|
            Log.debug("#{subtype} is the location at which #{command} happens", 6)
            name = :location_of
            modify_info(subtype, name, []) << command
        end
    end
}
