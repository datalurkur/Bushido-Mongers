abstract root zone {
    /* How deep in the world hierarchy the zone can be created. */
    class_many int depth_range;
    depth_range 0;

    /* Acceptable sub-zones */
    class_many optional sym child_zones;

    has_many optional sym keywords;
/*    needs keywords; */

    class_many optional sym optional_keywords;

    /* Can spawn NPCs */
    class_many optional sym spawn_npcs;

    /* Can spawn items */
    class_many optional sym spawn_items;
    spawn_items rock chest;

    class sym sideness;
    sideness outside;

    class sym ground_name;
    ground_name ground;
}

post_process {
    self.find_subtypes(:zone, {}, true).each do |zone|
        unless info_for(zone, :spawn_npcs).empty?
            # Get a list of non-abstract NPCs that spawn in this zone
            npc_types = info_for(zone, :spawn_npcs).map { |npc_type| types_of(npc_type) }.flatten.uniq
            set_info(zone, :spawn_npcs, npc_types)

            # Add this zone's data to the NPCs that spawn here
            npc_types.each do |npc_type|
                spawn_zones = info_for(npc_type, :spawns_in)
                modify_info(npc_type, :spawns_in).concat(zone).uniq!
            end
        end
    end
}
