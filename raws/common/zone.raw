abstract root zone {
    /* How deep in the world hierarchy the zone can be created. */
    class_many int depth_range;
    depth_range 0;

    /* Acceptable sub-zones */
    class_many optional sym child_zones;

    has_many optional sym keywords;
/*    needs keywords; */

    class_many optional sym optional_keywords;

    /* Can spawn NPCs */
    class_many optional sym spawn_npcs;

    /* Can spawn items */
    class_many optional sym spawn_items;
    spawn_items rock chest;

    class sym sideness;
    sideness outside;

    class sym ground_name;
    ground_name ground;
}

post_process {
    name = :spawn_npcs
    self.find_subtypes(:zone, {}, true).each do |zone|
        unless info_for(zone, name).empty?
            set_info(zone, name,
                modify_info(zone, name, []).map { |spawns| types_of(spawns) }.flatten.uniq
            )
        end
    end
    self.find_subtypes(:archetype, {}, true).each do |npc|
        if spawns_in = info_for(npc, :spawns_in)
            spawns_in.each do |zone|
                set_info(zone, name,
                    (modify_info(zone, name, []) + [npc]).uniq
                )
            end
        end
    end
}
