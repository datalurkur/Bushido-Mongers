/*
    A corporeal is a special type of thing that is incidentally composed of a body.
    Doing damage to the corporeal damages the body, and upon death the incidental composition
      is dropped into the world as a corpse
    TODO : Figure out how to impart the corpse with some of the information of the NPC / character
*/
abstract composition_root corporeal {
    has sym size;
    class sym body_type;
    class optional sym consumes;
    class optional proc on_consume;

    /* The body is the incidental. */
    container_classes             incidental;
    preserved_container_classes   incidental;
    has_many optional sym         incidental;

    uses corporeal;
}

abstract root adjustable_size {
    class sym typical_size;
    needs relative_size;

    uses adjustable_size;
}

abstract item,composition,adjustable_size body_part {
    has int hp;

    /* Body parts are worthless by default */
    value 0;
}

/* An extra container class for worn objects, since they've got some special semantics. */
abstract body_part body_part_can_wear {
    container_classes           worn;
    mutable_container_classes   worn;
    /* Worn objects always preserved through destruction? */
    preserved_container_classes worn;
    has_many optional sym worn;
}

/* An extra container class for grasped objects, since they've got some special semantics. */
abstract body_part_can_wear grasping_body_part {
    container_classes           grasped;
    mutable_container_classes   grasped;
    /* Grasped objects always preserved through destruction */
    preserved_container_classes grasped;
    has_many optional sym grasped;
}

/* This is for parts that can hold but can't wear anything, e.g. a mouth. */
abstract body_part holding_body_part {
    container_classes           grasped;
    mutable_container_classes   grasped;
    /* Grasped objects always preserved through destruction */
    preserved_container_classes grasped;
    has_many optional sym grasped;
}

consumable,adjustable_size flesh {
    typical_size small;
    weight 1;
}

abstract root body {}
abstract body biped {}
abstract body quadriped {}
abstract body octiped {}

post_process {
    duplicate_object(:arm, :left_arm)
    duplicate_object(:arm, :right_arm)
    duplicate_object(:leg, :left_leg)
    duplicate_object(:leg, :right_leg)
    Log.debug("Adding limbs to bipeds")
    types_of(:biped).each do |biped|
        Log.debug("#{biped.inspect} gets limbs!")
        modify_info(biped, :external).concat([
            :left_arm,
            :right_arm,
            :left_leg,
            :right_leg
        ])
    end

    duplicate_object(:leg, :left_front_leg)
    duplicate_object(:leg, :left_rear_leg)
    duplicate_object(:leg, :right_front_leg)
    duplicate_object(:leg, :right_rear_leg)
    types_of(:quadriped).each do |qp|
        modify_info(qp, :external).concat([
            :left_front_leg,
            :left_rear_leg,
            :right_front_leg,
            :right_rear_leg
        ])
    end

    duplicate_object(:leg, :left_front_anterior_leg)
    duplicate_object(:leg, :left_front_posterior_leg)
    duplicate_object(:leg, :left_rear_anterior_leg)
    duplicate_object(:leg, :left_rear_posterior_leg)
    duplicate_object(:leg, :right_front_anterior_leg)
    duplicate_object(:leg, :right_front_posterior_leg)
    duplicate_object(:leg, :right_rear_anterior_leg)
    duplicate_object(:leg, :right_rear_posterior_leg)
    types_of(:octiped).each do |op|
        modify_info(op, :external).concat([
            :left_front_anterior_leg,
            :left_front_posterior_leg,
            :left_rear_anterior_leg,
            :left_rear_posterior_leg,
            :right_front_anterior_leg,
            :right_front_posterior_leg,
            :right_rear_anterior_leg,
            :right_rear_posterior_leg
        ])
    end
}

/* Basically, this is the equivalent of a torso */
biped,body_part_can_wear humanoid_body {
    weight 15;
    incidental flesh;
    typical_size medium;
    internal liver;
    external head;
}

octiped,body_part arachnoid_body {
    weight 10;
    incidental flesh;
    typical_size medium;
    internal spinner;
    external carapace;
}

quadriped,body_part rodent_body {
    weight 2;
    incidental flesh;
    typical_size small;
    external head tail;
}

quadriped,body_part ungulate_body {
    weight 200;
    incidental flesh;
    typical_size large;
    external head tail;
}

body_part_can_wear head {
    weight 4;
    typical_size small;
    external mouth;
}

holding_body_part mouth {
    weight 0.5;
    typical_size tiny;
}

body_part_can_wear arm {
    weight 5;
    incidental flesh;
    typical_size small;
    external hand;
}

grasping_body_part hand {
    weight 2;
    incidental flesh;
    typical_size small;
}

body_part_can_wear leg {
    weight 10;
    incidental flesh;
    typical_size small;
    external foot;
}

body_part_can_wear foot {
    weight 4;
    incidental flesh;
    typical_size small;
}

body_part_can_wear carapace {
    weight 15;
    incidental flesh;
    typical_size small;
}

body_part spinner {
    weight 1;
    incidental flesh;
    typical_size tiny;
}

body_part tail {
    weight 1;
    incidental flesh;
    typical_size tiny;
}

body_part liver {
    weight 3;
    incidental flesh;
    typical_size small;
}
