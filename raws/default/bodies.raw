abstract object body {
    has_many sym body_parts;
    has sym size;

    needs size;

    /* Instantiate the body parts using the size of the body */
    at_creation {
        parts = @properties[:body_parts].collect { |part|
            @core.db.create(@core, part, {:size => params[:size]})
        }
        {
            :body_parts => parts,
            :weight     => parts.inject(0) { |s,p| s + p.weight },
            :size       => params[:size]
        }
    }
}

body humanoid_body {
    /* TODO - We need to figure out how to have multiple of a body part.  We shouldn't be manually specifying left and right something. */
    body_parts head torso;
}

body arachnoid_body {
    body_parts carapace spinner;
}

body rodent_body {
    body_parts head torso tail;
}

abstract object body_part {
    needs size;

    /* Adjust the weight of the body part based on size */
    at_creation {
        {
            :weight => @properties[:weight] * Size.value(params[:size])
        }
    }
}

body_part head {
    /* TODO - These weights should be based on body size */
    weight 4;
}

body_part torso {
    weight 25;
}

body_part carapace {
    weight 15;
}

body_part spinner {
    weight 1;
}

body_part tail {
    weight 1;
}
