abstract composition body_part {
    needs relative_size;
    class sym typical_size;
    has int hp;

    /* Adjust the weight and hp of the body part based on size */
    at_creation {
        typical_size = @core.db.info_for(@type, :typical_size)
        actual_size = Size.adjust(typical_size, params[:relative_size])
        {
            :size   => actual_size,
            :weight => @properties[:weight] * Size.value(actual_size),
            :hp     => 2**Size.index(actual_size)
        }
    }
}

abstract body_part body;

/* FIXME - Sorry zphobic, the new composition system kinda screwed the bilateral thing */
abstract body biped {
    external_components leg;
}

abstract body quadriped {
    external_components leg;
}

abstract body octiped {
    external_components leg;
}

/* Basically, this is the equivalent of a torso */
biped humanoid_body {
    weight 15;
    typical_size medium;
    internal_components liver;
    external_components head arm;
}

octiped arachnoid_body {
    weight 10;
    typical_size medium;
    internal_components spinner;
    external_components carapace;
}

quadriped rodent_body {
    weight 2;
    typical_size small;
    external_components head tail;
}


body_part head {
    weight 4;
    typical_size small;
}

body_part arm {
    weight 5;
    typical_size small;
    external_components hand;
}

body_part hand {
    /* TODO - make hands able to grasp somehow */
    weight 2;
    typical_size small;
}

body_part leg {
    weight 10;
    typical_size small;
    external_components foot;
}

body_part foot {
    weight 4;
    typical_size small;
}

body_part carapace {
    weight 15;
    typical_size small;
}

body_part spinner {
    weight 1;
    typical_size tiny;
}

body_part tail {
    weight 1;
    typical_size tiny;
}

body_part liver {
    weight 3;
    typical_size small;
}
