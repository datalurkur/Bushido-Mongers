abstract composition body_part {
    has int hp;
    class sym typical_size;
    needs relative_size;

    /* Body parts are worthless by default */
    value 0;

    /* Adjust the weight and hp of the body part based on size */
    at_creation {
        typical_size = @core.db.info_for(@type, :typical_size)
        actual_size = Size.adjust(typical_size, params[:relative_size])
        {
            :size   => actual_size,
            :weight => @properties[:weight] * Size.value(actual_size),
            :hp     => 2**Size.index(actual_size)
        }
    }
}

abstract body_part body {}
abstract body biped {}
abstract body quadriped {}
abstract body octiped {}

post_process {
    duplicate_object(:leg, :left_leg)
    duplicate_object(:leg, :right_leg)
    duplicate_object(:arm, :left_arm)
    duplicate_object(:arm, :right_arm)
    types_of(:biped).each do |biped|
        info_for(biped, :external).concat([
            :left_leg,
            :right_leg,
            :left_arm,
            :right_arm
        ])
    end

    duplicate_object(:leg, :left_front_leg)
    duplicate_object(:leg, :left_rear_leg)
    duplicate_object(:leg, :right_front_leg)
    duplicate_object(:leg, :right_rear_leg)
    types_of(:quadriped).each do |qp|
        info_for(qp, :external).concat([
            :left_front_leg,
            :left_rear_leg,
            :right_front_leg,
            :right_rear_leg
        ])
    end

    duplicate_object(:leg, :left_front_anterior_leg)
    duplicate_object(:leg, :left_front_posterior_leg)
    duplicate_object(:leg, :left_rear_anterior_leg)
    duplicate_object(:leg, :left_rear_posterior_leg)
    duplicate_object(:leg, :right_front_anterior_leg)
    duplicate_object(:leg, :right_front_posterior_leg)
    duplicate_object(:leg, :right_rear_anterior_leg)
    duplicate_object(:leg, :right_rear_posterior_leg)
    types_of(:octiped).each do |op|
        info_for(op, :external).concat([
            :left_front_anterior_leg,
            :left_front_posterior_leg,
            :left_rear_anterior_leg,
            :left_rear_posterior_leg,
            :right_front_anterior_leg,
            :right_front_posterior_leg,
            :right_rear_anterior_leg,
            :right_rear_posterior_leg
        ])
    end
}

/* Basically, this is the equivalent of a torso */
biped humanoid_body {
    weight 15;
    typical_size medium;
    internal liver;
    external head;
}

octiped arachnoid_body {
    weight 10;
    typical_size medium;
    internal spinner;
    external carapace;
}

quadriped rodent_body {
    weight 2;
    typical_size small;
    external head tail;
}


body_part head {
    weight 4;
    typical_size small;
}

body_part arm {
    weight 5;
    typical_size small;
    is_container true;
    external hand;
}

body_part hand {
    /* TODO - make hands able to grasp somehow */
    weight 2;
    typical_size small;
    is_container true;
    preserve_internal true;
}

body_part leg {
    weight 10;
    typical_size small;
    is_container true;
    external foot;
}

body_part foot {
    weight 4;
    typical_size small;
}

body_part carapace {
    weight 15;
    typical_size small;
}

body_part spinner {
    weight 1;
    typical_size tiny;
}

body_part tail {
    weight 1;
    typical_size tiny;
}

body_part liver {
    weight 3;
    typical_size small;
}
